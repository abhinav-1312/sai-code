import React, { useEffect, useState } from 'react'
// import { consumerDetails, itemDetails, orgConsignorDetails, supplierDetails } from './../CommonColumns'
import DetailData from './DetailData'
import { apiHeader, convertArrayToObject, convertEpochToDateString, generateCsvData } from '../../../utils/Functions'
import axios from 'axios'
import { useSelector } from 'react-redux'

const orgConsignorDetails = [
    {
        title: "Consignor Regional Center Code",
        dataIndex: "crRegionalCenterCd"
    },
    {
        title: "Consignor Regional Center Name",
        dataIndex: "crRegionalCenterName"
    },
    {
        title: "Consignor Address",
        dataIndex: "crAddress"
    },
    {
        title: "Consignor Zipcode",
        dataIndex: "crZipcode"
    }
]
const orgConsigneeDetails = [
    {
        title: "Consignee Regional Center Code",
        dataIndex: "ceRegionalCenterCd"
    },
    {
        title: "Consignee Regional Center Name",
        dataIndex: "ceRegionalCenterName"
    },
    {
        title: "Consignee Address",
        dataIndex: "ceAddress"
    },
    {
        title: "Consignee Zipcode",
        dataIndex: "ceZipcode"
    }
]

const consumerDetails = [
    {
        title: "Consumer Name",
        dataIndex: "consumerName"
    },
    {
        title: "Contact No",
        dataIndex: "contactNo"
    }
]

const itemDetails = [
    {
        title: "Item Code",
        dataIndex: "itemCode"
    },
    {
        title: "Item Description",
        dataIndex: "itemDesc"
    },
    {
        title: "Uom Description",
        dataIndex: "uomDesc",
    },
]  

const supplierDetails = [
    {
        title: "Supplier Code",
        dataIndex: "supplierCd",
        render: (text, record) => record.supplierCd || record.supplierCode, 
    },
    {
        title: "Supplier Name",
        dataIndex: "supplierName"
    },
    {
        title: "Supplier Address",
        dataIndex: "crAddress"
    }
]
const poExtraColumns = [
    {
        title: "Acceptance Note No.",
        dataIndex: "processId"
    },
    {
        title: "Acceptance Note Date",
        dataIndex: "issueDate"

    },
    {
        title: "Noa No",
        dataIndex: "noaNo"
    },
    {
        title: "Noa Date",
        dataIndex: "noaDate",
        render: (date) => convertEpochToDateString(date)
    },
    {
        title: "Date of Delivery",
        dataIndex: "dateOfDelivery",
    },
    ...orgConsigneeDetails,
    ...supplierDetails
]

const irpExtraColumn = [
    {
        title: "Return Note No.",
        dataIndex: "processId"
    }
]
const dataColumn = [
    {
        title: "GRN Date",
        dataIndex: "grnDate"
    },
    {
        title: "GRN No.",
        dataIndex: "processId"
    },
    {
        title: "Process Type",
        dataIndex: "type"
    },
    {
        title: "Generated By",
        dataIndex: "genName"
    },
    {
        title: "Generation Date",
        dataIndex: "genDate"
    },
    {
        title: "Verified By",
        dataIndex: "issueName"
    },
    {
        title: 'Verification Date',
        dataIndex: "issueDate"
    },
    {
        title: "Terms and Condition",
        dataIndex: "termsCondition"
    },
    {
        title: "Note",
        dataIndex: "note"
    },
]

const itemListColumn = [
    ...itemDetails,
    {
        title: "Received Quantity",
        dataIndex: "quantity"
    },
    {
        title: "Budget Head Procurement",
        dataIndex: "budgetHeadProcurement"
    },
    {
        title: "Remarks",
        dataIndex: "remarks"
    },
    {
        title: "Locator Description",
        dataIndex: "locatorDesc",
    }
]

export const irpGrnDataColumns = [...dataColumn, ...consumerDetails, ...irpExtraColumn, ...orgConsignorDetails]
export const poGrnDataColumns = [...dataColumn, ...poExtraColumns]
export const iopGrnDataColumns = [...dataColumn, ...orgConsignorDetails, ...orgConsigneeDetails]
export const irpIopGrnItemListColumns = itemListColumn
export const poGrnItemListColumns = [...itemListColumn, {title: "Unit Price", dataIndex: "unitPrice"}]


const GrnTable = ({type, data, itemList, setCsv}) => {
    useEffect(()=>{
        const csvData = generateCsvData("Goods Receive Note", dataColumnsUpdated, data, itemListColumn, itemList)
        setCsv(csvData)
    }, [])
    

    const dataColumnsUpdated = type === "PO" ? [...dataColumn, ...poExtraColumns] : (type === "IRP" ? [...dataColumn, ...consumerDetails, ...irpExtraColumn, ...orgConsignorDetails] : [...dataColumn, ...orgConsignorDetails, ...orgConsigneeDetails])
    const itemListColumnsUpdated = type === "PO" ? [...itemListColumn, {title: "Unit Price", dataIndex: "unitPrice"}] : itemListColumn;
  return (
    <DetailData dataColumn={dataColumnsUpdated} itemListColumn={itemListColumnsUpdated} data={data} itemList={itemList}/>
  )
}

export default GrnTable
